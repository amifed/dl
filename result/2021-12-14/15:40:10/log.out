dataset_path: /home/djy/dataset/dataset
pretrained : False 
parallel: False

msg: cbam+x resnet18
using model: ResNet, resnet18
using device cuda:0
batch_size = 20
epochs = 64
loss_function = CrossEntropyLoss()
optimizer = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0
)


========== Train Epoch 1 ==========
Loss: 1.807	Accuracy: 32.98%	Cost 30s

========== Train Epoch 2 ==========
Loss: 1.613	Accuracy: 35.11%	Cost 30s

========== Train Epoch 3 ==========
Loss: 1.463	Accuracy: 41.49%	Cost 33s

========== Train Epoch 4 ==========
Loss: 1.316	Accuracy: 41.49%	Cost 30s

========== Train Epoch 5 ==========
Loss: 1.154	Accuracy: 45.21%	Cost 29s

========== Train Epoch 6 ==========
Loss: 1.018	Accuracy: 50.00%	Cost 30s

========== Train Epoch 7 ==========
Loss: 0.808	Accuracy: 53.19%	Cost 31s

========== Train Epoch 8 ==========
Loss: 0.664	Accuracy: 52.66%	Cost 31s

========== Train Epoch 9 ==========
Loss: 0.470	Accuracy: 56.38%	Cost 29s

========== Train Epoch 10 ==========
Loss: 0.343	Accuracy: 49.47%	Cost 30s

========== Train Epoch 11 ==========
Loss: 0.222	Accuracy: 50.53%	Cost 31s

========== Train Epoch 12 ==========
Loss: 0.132	Accuracy: 63.30%	Cost 32s

========== Train Epoch 13 ==========
Loss: 0.086	Accuracy: 61.17%	Cost 30s

========== Train Epoch 14 ==========
Loss: 0.062	Accuracy: 61.70%	Cost 30s

========== Train Epoch 15 ==========
Loss: 0.048	Accuracy: 67.02%	Cost 31s

========== Train Epoch 16 ==========
Loss: 0.046	Accuracy: 57.45%	Cost 30s

========== Train Epoch 17 ==========
Loss: 0.087	Accuracy: 56.38%	Cost 31s

========== Train Epoch 18 ==========
Loss: 0.058	Accuracy: 62.77%	Cost 30s

========== Train Epoch 19 ==========
Loss: 0.033	Accuracy: 63.83%	Cost 30s

========== Train Epoch 20 ==========
Loss: 0.026	Accuracy: 61.70%	Cost 32s

========== Train Epoch 21 ==========
Loss: 0.031	Accuracy: 61.17%	Cost 30s

========== Train Epoch 22 ==========
Loss: 0.022	Accuracy: 63.30%	Cost 30s

========== Train Epoch 23 ==========
Loss: 0.023	Accuracy: 62.23%	Cost 30s

========== Train Epoch 24 ==========
Loss: 0.075	Accuracy: 52.13%	Cost 31s

========== Train Epoch 25 ==========
Loss: 0.041	Accuracy: 61.17%	Cost 31s

========== Train Epoch 26 ==========
Loss: 0.054	Accuracy: 55.85%	Cost 30s

========== Train Epoch 27 ==========
Loss: 0.035	Accuracy: 64.36%	Cost 30s

========== Train Epoch 28 ==========
Loss: 0.034	Accuracy: 58.51%	Cost 30s

========== Train Epoch 29 ==========
Loss: 0.024	Accuracy: 60.11%	Cost 30s

========== Train Epoch 30 ==========
Loss: 0.013	Accuracy: 60.64%	Cost 30s

========== Train Epoch 31 ==========
Loss: 0.007	Accuracy: 63.83%	Cost 30s

========== Train Epoch 32 ==========
Loss: 0.005	Accuracy: 62.77%	Cost 30s

========== Train Epoch 33 ==========
Loss: 0.005	Accuracy: 63.83%	Cost 31s

========== Train Epoch 34 ==========
Loss: 0.005	Accuracy: 65.96%	Cost 32s

========== Train Epoch 35 ==========
Loss: 0.005	Accuracy: 65.43%	Cost 30s

========== Train Epoch 36 ==========
Loss: 0.003	Accuracy: 62.23%	Cost 32s

========== Train Epoch 37 ==========
Loss: 0.004	Accuracy: 61.70%	Cost 30s

========== Train Epoch 38 ==========
Loss: 0.009	Accuracy: 63.83%	Cost 30s

========== Train Epoch 39 ==========
Loss: 0.072	Accuracy: 36.70%	Cost 30s

========== Train Epoch 40 ==========
Loss: 0.144	Accuracy: 50.53%	Cost 31s

========== Train Epoch 41 ==========
Loss: 0.173	Accuracy: 54.26%	Cost 32s

========== Train Epoch 42 ==========
Loss: 0.093	Accuracy: 55.85%	Cost 31s

========== Train Epoch 43 ==========
Loss: 0.032	Accuracy: 59.04%	Cost 31s

========== Train Epoch 44 ==========
Loss: 0.017	Accuracy: 62.23%	Cost 30s

========== Train Epoch 45 ==========
Loss: 0.009	Accuracy: 61.70%	Cost 31s

========== Train Epoch 46 ==========
Loss: 0.007	Accuracy: 61.70%	Cost 30s

========== Train Epoch 47 ==========
Loss: 0.004	Accuracy: 61.70%	Cost 31s

========== Train Epoch 48 ==========
Loss: 0.005	Accuracy: 62.77%	Cost 31s

========== Train Epoch 49 ==========
Loss: 0.004	Accuracy: 64.36%	Cost 30s

========== Train Epoch 50 ==========
Loss: 0.005	Accuracy: 63.83%	Cost 30s

========== Train Epoch 51 ==========
Loss: 0.003	Accuracy: 63.83%	Cost 31s

========== Train Epoch 52 ==========
Loss: 0.003	Accuracy: 64.36%	Cost 30s

========== Train Epoch 53 ==========
Loss: 0.004	Accuracy: 63.83%	Cost 30s

========== Train Epoch 54 ==========
Loss: 0.014	Accuracy: 61.17%	Cost 31s

========== Train Epoch 55 ==========
Loss: 0.010	Accuracy: 63.83%	Cost 29s

========== Train Epoch 56 ==========
Loss: 0.008	Accuracy: 64.36%	Cost 31s

========== Train Epoch 57 ==========
Loss: 0.006	Accuracy: 61.70%	Cost 32s

========== Train Epoch 58 ==========
Loss: 0.008	Accuracy: 63.83%	Cost 31s

========== Train Epoch 59 ==========
Loss: 0.024	Accuracy: 56.38%	Cost 30s

========== Train Epoch 60 ==========
Loss: 0.019	Accuracy: 60.64%	Cost 31s

========== Train Epoch 61 ==========
Loss: 0.011	Accuracy: 62.77%	Cost 31s

========== Train Epoch 62 ==========
Loss: 0.038	Accuracy: 55.32%	Cost 30s

========== Train Epoch 63 ==========
Loss: 0.084	Accuracy: 50.00%	Cost 29s

========== Train Epoch 64 ==========
Loss: 0.043	Accuracy: 53.72%	Cost 30s

Finished training!!!

Min Loss = 0.003 in epoch 51;
    Max Accuracy = 67.02% in epoch 14;
    Total Cost 33 minutes

ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=64, out_features=4, bias=True)
            (2): ReLU()
            (3): Linear(in_features=4, out_features=64, bias=True)
          )
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=64, out_features=4, bias=True)
            (2): ReLU()
            (3): Linear(in_features=4, out_features=64, bias=True)
          )
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=128, out_features=8, bias=True)
            (2): ReLU()
            (3): Linear(in_features=8, out_features=128, bias=True)
          )
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=128, out_features=8, bias=True)
            (2): ReLU()
            (3): Linear(in_features=8, out_features=128, bias=True)
          )
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=256, out_features=16, bias=True)
            (2): ReLU()
            (3): Linear(in_features=16, out_features=256, bias=True)
          )
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=256, out_features=16, bias=True)
            (2): ReLU()
            (3): Linear(in_features=16, out_features=256, bias=True)
          )
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=512, out_features=32, bias=True)
            (2): ReLU()
            (3): Linear(in_features=32, out_features=512, bias=True)
          )
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=512, out_features=32, bias=True)
            (2): ReLU()
            (3): Linear(in_features=32, out_features=512, bias=True)
          )
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc_): Linear(in_features=512, out_features=7, bias=True)
  (__fc__): Linear(in_features=1024, out_features=7, bias=True)
)

[0.32978723404255317, 0.35106382978723405, 0.4148936170212766, 0.4148936170212766, 0.4521276595744681, 0.5, 0.5319148936170213, 0.526595744680851, 0.5638297872340425, 0.4946808510638298, 0.5053191489361702, 0.6329787234042553, 0.6117021276595744, 0.6170212765957447, 0.6702127659574468, 0.574468085106383, 0.5638297872340425, 0.6276595744680851, 0.6382978723404256, 0.6170212765957447, 0.6117021276595744, 0.6329787234042553, 0.6223404255319149, 0.5212765957446809, 0.6117021276595744, 0.5585106382978723, 0.6436170212765957, 0.5851063829787234, 0.601063829787234, 0.6063829787234043, 0.6382978723404256, 0.6276595744680851, 0.6382978723404256, 0.6595744680851063, 0.6542553191489362, 0.6223404255319149, 0.6170212765957447, 0.6382978723404256, 0.3670212765957447, 0.5053191489361702, 0.5425531914893617, 0.5585106382978723, 0.5904255319148937, 0.6223404255319149, 0.6170212765957447, 0.6170212765957447, 0.6170212765957447, 0.6276595744680851, 0.6436170212765957, 0.6382978723404256, 0.6382978723404256, 0.6436170212765957, 0.6382978723404256, 0.6117021276595744, 0.6382978723404256, 0.6436170212765957, 0.6170212765957447, 0.6382978723404256, 0.5638297872340425, 0.6063829787234043, 0.6276595744680851, 0.5531914893617021, 0.5, 0.5372340425531915]
