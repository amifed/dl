dataset_path: /home/djy/dataset/dataset
pretrained : True 
parallel: False

msg: resnet18
using model: ResNet, resnet18
using device cuda:0
batch_size = 20
epochs = 64
loss_function = CrossEntropyLoss()
optimizer = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0
)


========== Train Epoch 1 ==========
Loss: 1.512	Accuracy: 71.28%	Cost 30s

========== Train Epoch 2 ==========
Loss: 0.535	Accuracy: 79.26%	Cost 29s

========== Train Epoch 3 ==========
Loss: 0.178	Accuracy: 82.45%	Cost 28s

========== Train Epoch 4 ==========
Loss: 0.070	Accuracy: 86.70%	Cost 29s

========== Train Epoch 5 ==========
Loss: 0.032	Accuracy: 86.17%	Cost 31s

========== Train Epoch 6 ==========
Loss: 0.022	Accuracy: 85.11%	Cost 31s

========== Train Epoch 7 ==========
Loss: 0.015	Accuracy: 85.64%	Cost 29s

========== Train Epoch 8 ==========
Loss: 0.011	Accuracy: 85.64%	Cost 30s

========== Train Epoch 9 ==========
Loss: 0.009	Accuracy: 85.64%	Cost 32s

========== Train Epoch 10 ==========
Loss: 0.010	Accuracy: 86.17%	Cost 31s

========== Train Epoch 11 ==========
Loss: 0.021	Accuracy: 83.51%	Cost 31s

========== Train Epoch 12 ==========
Loss: 0.021	Accuracy: 86.17%	Cost 31s

========== Train Epoch 13 ==========
Loss: 0.011	Accuracy: 85.11%	Cost 32s

========== Train Epoch 14 ==========
Loss: 0.007	Accuracy: 84.04%	Cost 32s

========== Train Epoch 15 ==========
Loss: 0.007	Accuracy: 84.04%	Cost 31s

========== Train Epoch 16 ==========
Loss: 0.005	Accuracy: 85.64%	Cost 31s

========== Train Epoch 17 ==========
Loss: 0.005	Accuracy: 84.57%	Cost 31s

========== Train Epoch 18 ==========
Loss: 0.003	Accuracy: 84.04%	Cost 30s

========== Train Epoch 19 ==========
Loss: 0.003	Accuracy: 85.11%	Cost 30s

========== Train Epoch 20 ==========
Loss: 0.002	Accuracy: 85.11%	Cost 30s

========== Train Epoch 21 ==========
Loss: 0.002	Accuracy: 85.11%	Cost 30s

========== Train Epoch 22 ==========
Loss: 0.002	Accuracy: 85.11%	Cost 29s

========== Train Epoch 23 ==========
Loss: 0.002	Accuracy: 86.70%	Cost 30s

========== Train Epoch 24 ==========
Loss: 0.003	Accuracy: 84.04%	Cost 30s

========== Train Epoch 25 ==========
Loss: 0.002	Accuracy: 83.51%	Cost 31s

========== Train Epoch 26 ==========
Loss: 0.002	Accuracy: 84.04%	Cost 30s

========== Train Epoch 27 ==========
Loss: 0.002	Accuracy: 84.04%	Cost 30s

========== Train Epoch 28 ==========
Loss: 0.002	Accuracy: 86.17%	Cost 29s

========== Train Epoch 29 ==========
Loss: 0.001	Accuracy: 84.57%	Cost 30s

========== Train Epoch 30 ==========
Loss: 0.002	Accuracy: 84.57%	Cost 32s

========== Train Epoch 31 ==========
Loss: 0.001	Accuracy: 86.70%	Cost 29s

========== Train Epoch 32 ==========
Loss: 0.001	Accuracy: 85.11%	Cost 31s

========== Train Epoch 33 ==========
Loss: 0.001	Accuracy: 85.11%	Cost 30s

========== Train Epoch 34 ==========
Loss: 0.001	Accuracy: 85.11%	Cost 32s

========== Train Epoch 35 ==========
Loss: 0.002	Accuracy: 85.64%	Cost 31s

========== Train Epoch 36 ==========
Loss: 0.001	Accuracy: 85.64%	Cost 30s

========== Train Epoch 37 ==========
Loss: 0.001	Accuracy: 86.70%	Cost 30s

========== Train Epoch 38 ==========
Loss: 0.001	Accuracy: 85.11%	Cost 30s

========== Train Epoch 39 ==========
Loss: 0.001	Accuracy: 85.64%	Cost 29s

========== Train Epoch 40 ==========
Loss: 0.001	Accuracy: 85.11%	Cost 30s

========== Train Epoch 41 ==========
Loss: 0.001	Accuracy: 85.64%	Cost 31s

========== Train Epoch 42 ==========
Loss: 0.001	Accuracy: 85.11%	Cost 29s

========== Train Epoch 43 ==========
Loss: 0.001	Accuracy: 86.17%	Cost 30s

========== Train Epoch 44 ==========
Loss: 0.001	Accuracy: 85.11%	Cost 29s

========== Train Epoch 45 ==========
Loss: 0.001	Accuracy: 86.70%	Cost 30s

========== Train Epoch 46 ==========
Loss: 0.002	Accuracy: 87.23%	Cost 29s

========== Train Epoch 47 ==========
Loss: 0.002	Accuracy: 84.04%	Cost 30s

========== Train Epoch 48 ==========
Loss: 0.048	Accuracy: 63.30%	Cost 30s

========== Train Epoch 49 ==========
Loss: 0.307	Accuracy: 68.62%	Cost 32s

========== Train Epoch 50 ==========
Loss: 0.230	Accuracy: 75.00%	Cost 30s

========== Train Epoch 51 ==========
Loss: 0.121	Accuracy: 82.98%	Cost 30s

========== Train Epoch 52 ==========
Loss: 0.053	Accuracy: 80.85%	Cost 31s

========== Train Epoch 53 ==========
Loss: 0.016	Accuracy: 85.64%	Cost 30s

========== Train Epoch 54 ==========
Loss: 0.012	Accuracy: 85.64%	Cost 30s

========== Train Epoch 55 ==========
Loss: 0.008	Accuracy: 85.64%	Cost 29s

========== Train Epoch 56 ==========
Loss: 0.005	Accuracy: 85.64%	Cost 31s

========== Train Epoch 57 ==========
Loss: 0.004	Accuracy: 86.70%	Cost 31s

========== Train Epoch 58 ==========
Loss: 0.002	Accuracy: 86.17%	Cost 31s

========== Train Epoch 59 ==========
Loss: 0.004	Accuracy: 87.23%	Cost 30s

========== Train Epoch 60 ==========
Loss: 0.002	Accuracy: 87.23%	Cost 31s

========== Train Epoch 61 ==========
Loss: 0.002	Accuracy: 86.17%	Cost 31s

========== Train Epoch 62 ==========
Loss: 0.002	Accuracy: 84.04%	Cost 31s

========== Train Epoch 63 ==========
Loss: 0.001	Accuracy: 84.57%	Cost 30s

========== Train Epoch 64 ==========
Loss: 0.002	Accuracy: 85.11%	Cost 31s

Finished training!!!

Min Loss = 0.001 in epoch 40;
    Max Accuracy = 87.23% in epoch 45;
    Total Cost 32 minutes

ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc_): Linear(in_features=512, out_features=7, bias=True)
  (__fc__): Linear(in_features=1024, out_features=7, bias=True)
)

[0.7127659574468085, 0.7925531914893617, 0.824468085106383, 0.8670212765957447, 0.8617021276595744, 0.851063829787234, 0.8563829787234043, 0.8563829787234043, 0.8563829787234043, 0.8617021276595744, 0.8351063829787234, 0.8617021276595744, 0.851063829787234, 0.8404255319148937, 0.8404255319148937, 0.8563829787234043, 0.8457446808510638, 0.8404255319148937, 0.851063829787234, 0.851063829787234, 0.851063829787234, 0.851063829787234, 0.8670212765957447, 0.8404255319148937, 0.8351063829787234, 0.8404255319148937, 0.8404255319148937, 0.8617021276595744, 0.8457446808510638, 0.8457446808510638, 0.8670212765957447, 0.851063829787234, 0.851063829787234, 0.851063829787234, 0.8563829787234043, 0.8563829787234043, 0.8670212765957447, 0.851063829787234, 0.8563829787234043, 0.851063829787234, 0.8563829787234043, 0.851063829787234, 0.8617021276595744, 0.851063829787234, 0.8670212765957447, 0.8723404255319149, 0.8404255319148937, 0.6329787234042553, 0.6861702127659575, 0.75, 0.8297872340425532, 0.8085106382978723, 0.8563829787234043, 0.8563829787234043, 0.8563829787234043, 0.8563829787234043, 0.8670212765957447, 0.8617021276595744, 0.8723404255319149, 0.8723404255319149, 0.8617021276595744, 0.8404255319148937, 0.8457446808510638, 0.851063829787234]
