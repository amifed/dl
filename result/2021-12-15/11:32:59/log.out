dataset_path: /home/djy/dataset/dataset
pretrained : False 
parallel: True

parallel segmentent dataset : /home/djy/dataset/ycrcb_hsv_dataset
msg: resnet + alexnet
using model: ResNet, resnet18
using device cuda:0
batch_size = 20
epochs = 64
loss_function = CrossEntropyLoss()
optimizer = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0
)


========== Train Epoch 1 ==========
Loss: 1.857	Accuracy: 38.83%	Cost 28s

========== Train Epoch 2 ==========
Loss: 1.539	Accuracy: 39.89%	Cost 28s

========== Train Epoch 3 ==========
Loss: 1.277	Accuracy: 44.15%	Cost 32s

========== Train Epoch 4 ==========
Loss: 1.016	Accuracy: 38.83%	Cost 29s

========== Train Epoch 5 ==========
Loss: 0.659	Accuracy: 57.98%	Cost 31s

========== Train Epoch 6 ==========
Loss: 0.385	Accuracy: 38.83%	Cost 30s

========== Train Epoch 7 ==========
Loss: 0.196	Accuracy: 42.55%	Cost 30s

========== Train Epoch 8 ==========
Loss: 0.117	Accuracy: 48.94%	Cost 29s

========== Train Epoch 9 ==========
Loss: 0.055	Accuracy: 49.47%	Cost 30s

========== Train Epoch 10 ==========
Loss: 0.034	Accuracy: 50.53%	Cost 31s

========== Train Epoch 11 ==========
Loss: 0.040	Accuracy: 47.34%	Cost 32s

========== Train Epoch 12 ==========
Loss: 0.022	Accuracy: 57.98%	Cost 31s

========== Train Epoch 13 ==========
Loss: 0.015	Accuracy: 62.23%	Cost 31s

========== Train Epoch 14 ==========
Loss: 0.009	Accuracy: 62.23%	Cost 30s

========== Train Epoch 15 ==========
Loss: 0.008	Accuracy: 62.77%	Cost 31s

========== Train Epoch 16 ==========
Loss: 0.012	Accuracy: 53.19%	Cost 29s

========== Train Epoch 17 ==========
Loss: 0.014	Accuracy: 55.32%	Cost 32s

========== Train Epoch 18 ==========
Loss: 0.011	Accuracy: 57.98%	Cost 31s

========== Train Epoch 19 ==========
Loss: 0.008	Accuracy: 59.04%	Cost 31s

========== Train Epoch 20 ==========
Loss: 0.006	Accuracy: 59.04%	Cost 48s

========== Train Epoch 21 ==========
Loss: 0.006	Accuracy: 56.91%	Cost 51s

========== Train Epoch 22 ==========
Loss: 0.005	Accuracy: 60.64%	Cost 49s

========== Train Epoch 23 ==========
Loss: 0.005	Accuracy: 57.45%	Cost 51s

========== Train Epoch 24 ==========
Loss: 0.005	Accuracy: 52.66%	Cost 50s

========== Train Epoch 25 ==========
Loss: 0.005	Accuracy: 60.11%	Cost 52s

========== Train Epoch 26 ==========
Loss: 0.006	Accuracy: 55.85%	Cost 50s

========== Train Epoch 27 ==========
Loss: 0.027	Accuracy: 46.81%	Cost 53s

========== Train Epoch 28 ==========
Loss: 0.185	Accuracy: 39.36%	Cost 52s

========== Train Epoch 29 ==========
Loss: 0.523	Accuracy: 18.09%	Cost 47s

========== Train Epoch 30 ==========
Loss: 0.415	Accuracy: 25.53%	Cost 53s

========== Train Epoch 31 ==========
Loss: 0.166	Accuracy: 40.96%	Cost 50s

========== Train Epoch 32 ==========
Loss: 0.043	Accuracy: 46.28%	Cost 51s

========== Train Epoch 33 ==========
Loss: 0.028	Accuracy: 51.60%	Cost 50s

========== Train Epoch 34 ==========
Loss: 0.018	Accuracy: 52.66%	Cost 51s

========== Train Epoch 35 ==========
Loss: 0.017	Accuracy: 50.00%	Cost 50s

========== Train Epoch 36 ==========
Loss: 0.013	Accuracy: 50.53%	Cost 50s

========== Train Epoch 37 ==========
Loss: 0.011	Accuracy: 50.53%	Cost 50s

========== Train Epoch 38 ==========
Loss: 0.007	Accuracy: 54.26%	Cost 47s

========== Train Epoch 39 ==========
Loss: 0.005	Accuracy: 55.32%	Cost 52s

========== Train Epoch 40 ==========
Loss: 0.007	Accuracy: 56.91%	Cost 52s

========== Train Epoch 41 ==========
Loss: 0.015	Accuracy: 50.53%	Cost 52s

========== Train Epoch 42 ==========
Loss: 0.012	Accuracy: 52.66%	Cost 51s

========== Train Epoch 43 ==========
Loss: 0.006	Accuracy: 55.32%	Cost 50s

========== Train Epoch 44 ==========
Loss: 0.005	Accuracy: 55.85%	Cost 50s

========== Train Epoch 45 ==========
Loss: 0.006	Accuracy: 55.32%	Cost 51s

========== Train Epoch 46 ==========
Loss: 0.008	Accuracy: 52.13%	Cost 50s

========== Train Epoch 47 ==========
Loss: 0.005	Accuracy: 50.00%	Cost 51s

========== Train Epoch 48 ==========
Loss: 0.005	Accuracy: 49.47%	Cost 48s

========== Train Epoch 49 ==========
Loss: 0.006	Accuracy: 55.32%	Cost 52s

========== Train Epoch 50 ==========
Loss: 0.004	Accuracy: 53.72%	Cost 51s

========== Train Epoch 51 ==========
Loss: 0.003	Accuracy: 55.85%	Cost 50s

========== Train Epoch 52 ==========
Loss: 0.003	Accuracy: 53.19%	Cost 50s

========== Train Epoch 53 ==========
Loss: 0.002	Accuracy: 52.66%	Cost 52s

========== Train Epoch 54 ==========
Loss: 0.002	Accuracy: 52.66%	Cost 50s

========== Train Epoch 55 ==========
Loss: 0.002	Accuracy: 53.19%	Cost 49s

========== Train Epoch 56 ==========
Loss: 0.002	Accuracy: 53.72%	Cost 54s

========== Train Epoch 57 ==========
Loss: 0.003	Accuracy: 50.00%	Cost 52s

========== Train Epoch 58 ==========
Loss: 0.002	Accuracy: 53.72%	Cost 51s

========== Train Epoch 59 ==========
Loss: 0.002	Accuracy: 54.26%	Cost 52s

========== Train Epoch 60 ==========
Loss: 0.002	Accuracy: 53.19%	Cost 52s

========== Train Epoch 61 ==========
Loss: 0.002	Accuracy: 53.19%	Cost 52s

========== Train Epoch 62 ==========
Loss: 0.002	Accuracy: 51.06%	Cost 53s

========== Train Epoch 63 ==========
Loss: 0.001	Accuracy: 53.72%	Cost 52s

========== Train Epoch 64 ==========
Loss: 0.002	Accuracy: 53.72%	Cost 52s

Finished training!!!

Min Loss = 0.001 in epoch 62;
    Max Accuracy = 62.77% in epoch 14;
    Total Cost 48 minutes

ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc_): Linear(in_features=512, out_features=7, bias=True)
  (__fc__): Linear(in_features=1024, out_features=7, bias=True)
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
)

[0.3882978723404255, 0.39893617021276595, 0.44148936170212766, 0.3882978723404255, 0.5797872340425532, 0.3882978723404255, 0.425531914893617, 0.48936170212765956, 0.4946808510638298, 0.5053191489361702, 0.4734042553191489, 0.5797872340425532, 0.6223404255319149, 0.6223404255319149, 0.6276595744680851, 0.5319148936170213, 0.5531914893617021, 0.5797872340425532, 0.5904255319148937, 0.5904255319148937, 0.5691489361702128, 0.6063829787234043, 0.574468085106383, 0.526595744680851, 0.601063829787234, 0.5585106382978723, 0.46808510638297873, 0.39361702127659576, 0.18085106382978725, 0.2553191489361702, 0.4095744680851064, 0.4627659574468085, 0.5159574468085106, 0.526595744680851, 0.5, 0.5053191489361702, 0.5053191489361702, 0.5425531914893617, 0.5531914893617021, 0.5691489361702128, 0.5053191489361702, 0.526595744680851, 0.5531914893617021, 0.5585106382978723, 0.5531914893617021, 0.5212765957446809, 0.5, 0.4946808510638298, 0.5531914893617021, 0.5372340425531915, 0.5585106382978723, 0.5319148936170213, 0.526595744680851, 0.526595744680851, 0.5319148936170213, 0.5372340425531915, 0.5, 0.5372340425531915, 0.5425531914893617, 0.5319148936170213, 0.5319148936170213, 0.5106382978723404, 0.5372340425531915, 0.5372340425531915]
