dataset_path: /home/djy/dataset/dataset
pretrained : False 
parallel: True

parallel segmentent dataset : /home/djy/dataset/ycrcb_hsv_dataset
msg: ca_cbam_spp_resnet_alexnet lr=0.001
using model: ResNet, resnet18
using device cuda:0
batch_size = 20
epochs = 64
loss_function = CrossEntropyLoss()
optimizer = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)


========== Train Epoch 1 ==========
Loss: 1.889	Accuracy: 29.79%	Cost 33s

========== Train Epoch 2 ==========
Loss: 1.692	Accuracy: 38.83%	Cost 32s

========== Train Epoch 3 ==========
Loss: 1.565	Accuracy: 32.98%	Cost 32s

========== Train Epoch 4 ==========
Loss: 1.478	Accuracy: 39.89%	Cost 30s

========== Train Epoch 5 ==========
Loss: 1.428	Accuracy: 44.68%	Cost 32s

========== Train Epoch 6 ==========
Loss: 1.357	Accuracy: 17.55%	Cost 32s

========== Train Epoch 7 ==========
Loss: 1.361	Accuracy: 34.57%	Cost 33s

========== Train Epoch 8 ==========
Loss: 1.275	Accuracy: 47.87%	Cost 32s

========== Train Epoch 9 ==========
Loss: 1.130	Accuracy: 42.55%	Cost 34s

========== Train Epoch 10 ==========
Loss: 1.050	Accuracy: 48.94%	Cost 33s

========== Train Epoch 11 ==========
Loss: 1.071	Accuracy: 32.98%	Cost 33s

========== Train Epoch 12 ==========
Loss: 0.980	Accuracy: 55.85%	Cost 33s

========== Train Epoch 13 ==========
Loss: 0.822	Accuracy: 49.47%	Cost 33s

========== Train Epoch 14 ==========
Loss: 0.833	Accuracy: 54.26%	Cost 33s

========== Train Epoch 15 ==========
Loss: 0.760	Accuracy: 50.53%	Cost 32s

========== Train Epoch 16 ==========
Loss: 0.686	Accuracy: 52.13%	Cost 31s

========== Train Epoch 17 ==========
Loss: 0.613	Accuracy: 48.40%	Cost 32s

========== Train Epoch 18 ==========
Loss: 0.509	Accuracy: 53.19%	Cost 32s

========== Train Epoch 19 ==========
Loss: 0.425	Accuracy: 52.13%	Cost 33s

========== Train Epoch 20 ==========
Loss: 0.388	Accuracy: 52.66%	Cost 33s

========== Train Epoch 21 ==========
Loss: 0.354	Accuracy: 57.45%	Cost 31s

========== Train Epoch 22 ==========
Loss: 0.349	Accuracy: 54.79%	Cost 32s

========== Train Epoch 23 ==========
Loss: 0.263	Accuracy: 54.79%	Cost 33s

========== Train Epoch 24 ==========
Loss: 0.195	Accuracy: 54.79%	Cost 34s

========== Train Epoch 25 ==========
Loss: 0.119	Accuracy: 60.64%	Cost 32s

========== Train Epoch 26 ==========
Loss: 0.089	Accuracy: 65.43%	Cost 34s

========== Train Epoch 27 ==========
Loss: 0.092	Accuracy: 42.02%	Cost 31s

========== Train Epoch 28 ==========
Loss: 0.204	Accuracy: 57.98%	Cost 32s

========== Train Epoch 29 ==========
Loss: 0.188	Accuracy: 46.81%	Cost 33s

========== Train Epoch 30 ==========
Loss: 0.082	Accuracy: 62.77%	Cost 34s

========== Train Epoch 31 ==========
Loss: 0.099	Accuracy: 61.70%	Cost 33s

========== Train Epoch 32 ==========
Loss: 0.098	Accuracy: 60.11%	Cost 32s

========== Train Epoch 33 ==========
Loss: 0.143	Accuracy: 57.98%	Cost 32s

========== Train Epoch 34 ==========
Loss: 0.165	Accuracy: 62.23%	Cost 33s

========== Train Epoch 35 ==========
Loss: 0.172	Accuracy: 50.53%	Cost 32s

========== Train Epoch 36 ==========
Loss: 0.134	Accuracy: 55.32%	Cost 33s

========== Train Epoch 37 ==========
Loss: 0.082	Accuracy: 57.98%	Cost 34s

========== Train Epoch 38 ==========
Loss: 0.050	Accuracy: 59.04%	Cost 31s

========== Train Epoch 39 ==========
Loss: 0.033	Accuracy: 60.11%	Cost 32s

========== Train Epoch 40 ==========
Loss: 0.052	Accuracy: 58.51%	Cost 32s

========== Train Epoch 41 ==========
Loss: 0.096	Accuracy: 58.51%	Cost 31s

========== Train Epoch 42 ==========
Loss: 0.041	Accuracy: 57.98%	Cost 34s

========== Train Epoch 43 ==========
Loss: 0.030	Accuracy: 59.04%	Cost 32s

========== Train Epoch 44 ==========
Loss: 0.037	Accuracy: 60.64%	Cost 33s

========== Train Epoch 45 ==========
Loss: 0.038	Accuracy: 58.51%	Cost 32s

========== Train Epoch 46 ==========
Loss: 0.018	Accuracy: 63.30%	Cost 33s

========== Train Epoch 47 ==========
Loss: 0.008	Accuracy: 61.17%	Cost 33s

========== Train Epoch 48 ==========
Loss: 0.003	Accuracy: 64.89%	Cost 33s

========== Train Epoch 49 ==========
Loss: 0.003	Accuracy: 64.36%	Cost 34s

========== Train Epoch 50 ==========
Loss: 0.002	Accuracy: 65.43%	Cost 33s

========== Train Epoch 51 ==========
Loss: 0.011	Accuracy: 63.83%	Cost 31s

========== Train Epoch 52 ==========
Loss: 0.007	Accuracy: 62.23%	Cost 34s

========== Train Epoch 53 ==========
Loss: 0.021	Accuracy: 62.23%	Cost 34s

========== Train Epoch 54 ==========
Loss: 0.110	Accuracy: 55.32%	Cost 33s

========== Train Epoch 55 ==========
Loss: 0.188	Accuracy: 49.47%	Cost 33s

========== Train Epoch 56 ==========
Loss: 0.169	Accuracy: 55.85%	Cost 32s

========== Train Epoch 57 ==========
Loss: 0.050	Accuracy: 63.30%	Cost 39s

========== Train Epoch 58 ==========
Loss: 0.056	Accuracy: 54.26%	Cost 33s

========== Train Epoch 59 ==========
Loss: 0.044	Accuracy: 59.57%	Cost 33s

========== Train Epoch 60 ==========
Loss: 0.037	Accuracy: 58.51%	Cost 32s

========== Train Epoch 61 ==========
Loss: 0.023	Accuracy: 57.98%	Cost 33s

========== Train Epoch 62 ==========
Loss: 0.030	Accuracy: 55.85%	Cost 34s

========== Train Epoch 63 ==========
Loss: 0.026	Accuracy: 64.36%	Cost 32s

========== Train Epoch 64 ==========
Loss: 0.041	Accuracy: 56.91%	Cost 32s

Finished training!!!

Min Loss = 0.002 in epoch 49;
    Max Accuracy = 65.43% in epoch 25;
    Total Cost 35 minutes

ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): CoordAtt(
          (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
          (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (bn1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (conv_h): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv_w): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): CoordAtt(
          (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
          (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (bn1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (conv_h): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv_w): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (cbam): CBAM(
        (ChannelGate): CoordAtt(
          (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
          (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
          (conv1): Conv2d(128, 8, kernel_size=(1, 1), stride=(1, 1))
          (bn1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (conv_h): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv_w): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): CoordAtt(
          (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
          (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
          (conv1): Conv2d(128, 8, kernel_size=(1, 1), stride=(1, 1))
          (bn1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (conv_h): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv_w): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (cbam): CBAM(
        (ChannelGate): CoordAtt(
          (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
          (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
          (conv1): Conv2d(256, 8, kernel_size=(1, 1), stride=(1, 1))
          (bn1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (conv_h): Conv2d(8, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv_w): Conv2d(8, 256, kernel_size=(1, 1), stride=(1, 1))
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): CoordAtt(
          (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
          (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
          (conv1): Conv2d(256, 8, kernel_size=(1, 1), stride=(1, 1))
          (bn1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (conv_h): Conv2d(8, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv_w): Conv2d(8, 256, kernel_size=(1, 1), stride=(1, 1))
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (cbam): CBAM(
        (ChannelGate): CoordAtt(
          (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
          (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
          (conv1): Conv2d(512, 16, kernel_size=(1, 1), stride=(1, 1))
          (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (conv_h): Conv2d(16, 512, kernel_size=(1, 1), stride=(1, 1))
          (conv_w): Conv2d(16, 512, kernel_size=(1, 1), stride=(1, 1))
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): CoordAtt(
          (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
          (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
          (conv1): Conv2d(512, 16, kernel_size=(1, 1), stride=(1, 1))
          (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (conv_h): Conv2d(16, 512, kernel_size=(1, 1), stride=(1, 1))
          (conv_w): Conv2d(16, 512, kernel_size=(1, 1), stride=(1, 1))
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (spppool): SPP(
    (pool1): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
    (pool2): MaxPool2d(kernel_size=7, stride=1, padding=3, dilation=1, ceil_mode=False)
    (pool3): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
  )
  (convspp): Conv2d(256, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bnspp): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (reluspp): ReLU(inplace=True)
  (fc_): Linear(in_features=512, out_features=7, bias=True)
  (__fc__): Linear(in_features=1024, out_features=7, bias=True)
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool_): AdaptiveAvgPool2d(output_size=(1, 1))
)

[0.2978723404255319, 0.3882978723404255, 0.32978723404255317, 0.39893617021276595, 0.44680851063829785, 0.17553191489361702, 0.34574468085106386, 0.4787234042553192, 0.425531914893617, 0.48936170212765956, 0.32978723404255317, 0.5585106382978723, 0.4946808510638298, 0.5425531914893617, 0.5053191489361702, 0.5212765957446809, 0.48404255319148937, 0.5319148936170213, 0.5212765957446809, 0.526595744680851, 0.574468085106383, 0.5478723404255319, 0.5478723404255319, 0.5478723404255319, 0.6063829787234043, 0.6542553191489362, 0.42021276595744683, 0.5797872340425532, 0.46808510638297873, 0.6276595744680851, 0.6170212765957447, 0.601063829787234, 0.5797872340425532, 0.6223404255319149, 0.5053191489361702, 0.5531914893617021, 0.5797872340425532, 0.5904255319148937, 0.601063829787234, 0.5851063829787234, 0.5851063829787234, 0.5797872340425532, 0.5904255319148937, 0.6063829787234043, 0.5851063829787234, 0.6329787234042553, 0.6117021276595744, 0.648936170212766, 0.6436170212765957, 0.6542553191489362, 0.6382978723404256, 0.6223404255319149, 0.6223404255319149, 0.5531914893617021, 0.4946808510638298, 0.5585106382978723, 0.6329787234042553, 0.5425531914893617, 0.5957446808510638, 0.5851063829787234, 0.5797872340425532, 0.5585106382978723, 0.6436170212765957, 0.5691489361702128]
