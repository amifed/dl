dataset_path: /home/djy/dataset/dataset
pretrained : False 
parallel: False

msg: alex spp
using model: AlexNet, _alexnet
using device cuda:0
batch_size = 20
epochs = 64
loss_function = CrossEntropyLoss()
optimizer = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    initial_lr: 0.0001
    lr: 0.0001
    weight_decay: 0
)


========== Train Epoch 1 ==========
Loss: 1.891	Accuracy: 32.45%	Cost 31s

========== Train Epoch 2 ==========
Loss: 1.855	Accuracy: 32.45%	Cost 31s

========== Train Epoch 3 ==========
Loss: 1.852	Accuracy: 32.45%	Cost 30s

========== Train Epoch 4 ==========
Loss: 1.842	Accuracy: 32.45%	Cost 31s

========== Train Epoch 5 ==========
Loss: 1.839	Accuracy: 32.45%	Cost 32s

========== Train Epoch 6 ==========
Loss: 1.818	Accuracy: 32.45%	Cost 31s

========== Train Epoch 7 ==========
Loss: 1.803	Accuracy: 32.45%	Cost 32s

========== Train Epoch 8 ==========
Loss: 1.796	Accuracy: 34.04%	Cost 31s

========== Train Epoch 9 ==========
Loss: 1.761	Accuracy: 33.51%	Cost 30s

========== Train Epoch 10 ==========
Loss: 1.749	Accuracy: 31.38%	Cost 31s

========== Train Epoch 11 ==========
Loss: 1.744	Accuracy: 32.45%	Cost 31s

========== Train Epoch 12 ==========
Loss: 1.726	Accuracy: 30.85%	Cost 30s

========== Train Epoch 13 ==========
Loss: 1.711	Accuracy: 29.79%	Cost 30s

========== Train Epoch 14 ==========
Loss: 1.706	Accuracy: 33.51%	Cost 30s

========== Train Epoch 15 ==========
Loss: 1.700	Accuracy: 29.79%	Cost 33s

========== Train Epoch 16 ==========
Loss: 1.680	Accuracy: 30.85%	Cost 31s

========== Train Epoch 17 ==========
Loss: 1.684	Accuracy: 31.91%	Cost 30s

========== Train Epoch 18 ==========
Loss: 1.681	Accuracy: 29.26%	Cost 31s

========== Train Epoch 19 ==========
Loss: 1.694	Accuracy: 31.91%	Cost 51s

========== Train Epoch 20 ==========
Loss: 1.669	Accuracy: 34.04%	Cost 52s

========== Train Epoch 21 ==========
Loss: 1.672	Accuracy: 32.45%	Cost 50s

========== Train Epoch 22 ==========
Loss: 1.656	Accuracy: 30.32%	Cost 49s

========== Train Epoch 23 ==========
Loss: 1.654	Accuracy: 31.91%	Cost 51s

========== Train Epoch 24 ==========
Loss: 1.624	Accuracy: 31.38%	Cost 52s

========== Train Epoch 25 ==========
Loss: 1.610	Accuracy: 32.45%	Cost 52s

========== Train Epoch 26 ==========
Loss: 1.647	Accuracy: 30.32%	Cost 50s

========== Train Epoch 27 ==========
Loss: 1.615	Accuracy: 33.51%	Cost 50s

========== Train Epoch 28 ==========
Loss: 1.623	Accuracy: 33.51%	Cost 52s

========== Train Epoch 29 ==========
Loss: 1.617	Accuracy: 35.11%	Cost 49s

========== Train Epoch 30 ==========
Loss: 1.597	Accuracy: 34.04%	Cost 49s

========== Train Epoch 31 ==========
Loss: 1.588	Accuracy: 31.38%	Cost 52s

========== Train Epoch 32 ==========
Loss: 1.577	Accuracy: 31.38%	Cost 52s

========== Train Epoch 33 ==========
Loss: 1.576	Accuracy: 29.79%	Cost 51s

========== Train Epoch 34 ==========
Loss: 1.586	Accuracy: 33.51%	Cost 49s

========== Train Epoch 35 ==========
Loss: 1.558	Accuracy: 31.38%	Cost 52s

========== Train Epoch 36 ==========
Loss: 1.546	Accuracy: 32.45%	Cost 52s

========== Train Epoch 37 ==========
Loss: 1.525	Accuracy: 30.85%	Cost 51s

========== Train Epoch 38 ==========
Loss: 1.541	Accuracy: 32.98%	Cost 50s

========== Train Epoch 39 ==========
Loss: 1.506	Accuracy: 31.91%	Cost 51s

========== Train Epoch 40 ==========
Loss: 1.498	Accuracy: 31.38%	Cost 50s

========== Train Epoch 41 ==========
Loss: 1.486	Accuracy: 34.57%	Cost 50s

========== Train Epoch 42 ==========
Loss: 1.479	Accuracy: 32.45%	Cost 49s

========== Train Epoch 43 ==========
Loss: 1.476	Accuracy: 34.04%	Cost 51s

========== Train Epoch 44 ==========
Loss: 1.448	Accuracy: 35.11%	Cost 50s

========== Train Epoch 45 ==========
Loss: 1.452	Accuracy: 37.23%	Cost 50s

========== Train Epoch 46 ==========
Loss: 1.431	Accuracy: 36.17%	Cost 51s

========== Train Epoch 47 ==========
Loss: 1.407	Accuracy: 36.17%	Cost 51s

========== Train Epoch 48 ==========
Loss: 1.412	Accuracy: 38.83%	Cost 51s

========== Train Epoch 49 ==========
Loss: 1.403	Accuracy: 32.98%	Cost 52s

========== Train Epoch 50 ==========
Loss: 1.370	Accuracy: 37.77%	Cost 50s

========== Train Epoch 51 ==========
Loss: 1.365	Accuracy: 35.11%	Cost 51s

========== Train Epoch 52 ==========
Loss: 1.362	Accuracy: 34.04%	Cost 50s

========== Train Epoch 53 ==========
Loss: 1.356	Accuracy: 37.77%	Cost 51s

========== Train Epoch 54 ==========
Loss: 1.320	Accuracy: 37.77%	Cost 51s

========== Train Epoch 55 ==========
Loss: 1.322	Accuracy: 38.30%	Cost 50s

========== Train Epoch 56 ==========
Loss: 1.326	Accuracy: 40.96%	Cost 52s

========== Train Epoch 57 ==========
Loss: 1.290	Accuracy: 40.96%	Cost 50s

========== Train Epoch 58 ==========
Loss: 1.258	Accuracy: 40.43%	Cost 50s

========== Train Epoch 59 ==========
Loss: 1.288	Accuracy: 40.43%	Cost 51s

========== Train Epoch 60 ==========
Loss: 1.287	Accuracy: 40.96%	Cost 50s

========== Train Epoch 61 ==========
Loss: 1.302	Accuracy: 42.55%	Cost 50s

========== Train Epoch 62 ==========
Loss: 1.261	Accuracy: 40.96%	Cost 51s

========== Train Epoch 63 ==========
Loss: 1.257	Accuracy: 42.02%	Cost 52s

========== Train Epoch 64 ==========
Loss: 1.220	Accuracy: 40.96%	Cost 50s

Finished training!!!

Min Loss = 1.220 in epoch 63;
    Max Accuracy = 42.55% in epoch 60;
    Total Cost 48 minutes

AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(2, 2))
  (relu1): ReLU(inplace=True)
  (pool1): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  (conv2): Conv2d(256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
  (relu2): ReLU(inplace=True)
  (pool2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  (conv3): Conv2d(256, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (relu3): ReLU(inplace=True)
  (conv4): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (relu4): ReLU(inplace=True)
  (conv5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (relu5): ReLU(inplace=True)
  (avgpool): AdaptiveAvgPool2d(output_size=(3, 3))
  (classifier_): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=2304, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=7, bias=True)
  )
  (__classifier__): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=4608, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=7, bias=True)
  )
  (spp1): SPP()
)

[0.324468085106383, 0.324468085106383, 0.324468085106383, 0.324468085106383, 0.324468085106383, 0.324468085106383, 0.324468085106383, 0.3404255319148936, 0.3351063829787234, 0.31382978723404253, 0.324468085106383, 0.30851063829787234, 0.2978723404255319, 0.3351063829787234, 0.2978723404255319, 0.30851063829787234, 0.3191489361702128, 0.2925531914893617, 0.3191489361702128, 0.3404255319148936, 0.324468085106383, 0.30319148936170215, 0.3191489361702128, 0.31382978723404253, 0.324468085106383, 0.30319148936170215, 0.3351063829787234, 0.3351063829787234, 0.35106382978723405, 0.3404255319148936, 0.31382978723404253, 0.31382978723404253, 0.2978723404255319, 0.3351063829787234, 0.31382978723404253, 0.324468085106383, 0.30851063829787234, 0.32978723404255317, 0.3191489361702128, 0.31382978723404253, 0.34574468085106386, 0.324468085106383, 0.3404255319148936, 0.35106382978723405, 0.3723404255319149, 0.3617021276595745, 0.3617021276595745, 0.3882978723404255, 0.32978723404255317, 0.3776595744680851, 0.35106382978723405, 0.3404255319148936, 0.3776595744680851, 0.3776595744680851, 0.3829787234042553, 0.4095744680851064, 0.4095744680851064, 0.40425531914893614, 0.40425531914893614, 0.4095744680851064, 0.425531914893617, 0.4095744680851064, 0.42021276595744683, 0.4095744680851064]
