dataset_path: /home/djy/dataset/dataset
pretrained : False 
parallel: False

msg: alexnet
using model: AlexNet, _alexnet
using device cuda:0
batch_size = 20
epochs = 64
loss_function = CrossEntropyLoss()
optimizer = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    initial_lr: 0.0001
    lr: 0.0001
    weight_decay: 0
)


========== Train Epoch 1 ==========
Loss: 1.894	Accuracy: 32.45%	Cost 50s

========== Train Epoch 2 ==========
Loss: 1.860	Accuracy: 32.45%	Cost 49s

========== Train Epoch 3 ==========
Loss: 1.855	Accuracy: 32.45%	Cost 50s

========== Train Epoch 4 ==========
Loss: 1.849	Accuracy: 32.45%	Cost 51s

========== Train Epoch 5 ==========
Loss: 1.850	Accuracy: 32.45%	Cost 51s

========== Train Epoch 6 ==========
Loss: 1.838	Accuracy: 32.45%	Cost 50s

========== Train Epoch 7 ==========
Loss: 1.829	Accuracy: 32.45%	Cost 47s

========== Train Epoch 8 ==========
Loss: 1.812	Accuracy: 32.45%	Cost 51s

========== Train Epoch 9 ==========
Loss: 1.794	Accuracy: 32.45%	Cost 50s

========== Train Epoch 10 ==========
Loss: 1.770	Accuracy: 32.45%	Cost 48s

========== Train Epoch 11 ==========
Loss: 1.739	Accuracy: 30.32%	Cost 49s

========== Train Epoch 12 ==========
Loss: 1.715	Accuracy: 30.85%	Cost 52s

========== Train Epoch 13 ==========
Loss: 1.686	Accuracy: 35.64%	Cost 47s

========== Train Epoch 14 ==========
Loss: 1.652	Accuracy: 37.23%	Cost 50s

========== Train Epoch 15 ==========
Loss: 1.622	Accuracy: 37.77%	Cost 49s

========== Train Epoch 16 ==========
Loss: 1.623	Accuracy: 36.17%	Cost 50s

========== Train Epoch 17 ==========
Loss: 1.610	Accuracy: 38.83%	Cost 49s

========== Train Epoch 18 ==========
Loss: 1.583	Accuracy: 38.83%	Cost 50s

========== Train Epoch 19 ==========
Loss: 1.568	Accuracy: 39.89%	Cost 47s

========== Train Epoch 20 ==========
Loss: 1.558	Accuracy: 37.77%	Cost 48s

========== Train Epoch 21 ==========
Loss: 1.539	Accuracy: 39.36%	Cost 49s

========== Train Epoch 22 ==========
Loss: 1.555	Accuracy: 40.43%	Cost 49s

========== Train Epoch 23 ==========
Loss: 1.513	Accuracy: 40.43%	Cost 50s

========== Train Epoch 24 ==========
Loss: 1.522	Accuracy: 39.36%	Cost 49s

========== Train Epoch 25 ==========
Loss: 1.483	Accuracy: 37.77%	Cost 48s

========== Train Epoch 26 ==========
Loss: 1.502	Accuracy: 37.77%	Cost 49s

========== Train Epoch 27 ==========
Loss: 1.477	Accuracy: 38.83%	Cost 48s

========== Train Epoch 28 ==========
Loss: 1.447	Accuracy: 39.89%	Cost 49s

========== Train Epoch 29 ==========
Loss: 1.478	Accuracy: 40.43%	Cost 49s

========== Train Epoch 30 ==========
Loss: 1.459	Accuracy: 40.43%	Cost 48s

========== Train Epoch 31 ==========
Loss: 1.430	Accuracy: 40.43%	Cost 47s

========== Train Epoch 32 ==========
Loss: 1.422	Accuracy: 38.83%	Cost 49s

========== Train Epoch 33 ==========
Loss: 1.441	Accuracy: 40.96%	Cost 52s

========== Train Epoch 34 ==========
Loss: 1.397	Accuracy: 39.89%	Cost 49s

========== Train Epoch 35 ==========
Loss: 1.367	Accuracy: 37.77%	Cost 51s

========== Train Epoch 36 ==========
Loss: 1.359	Accuracy: 40.43%	Cost 51s

========== Train Epoch 37 ==========
Loss: 1.347	Accuracy: 40.43%	Cost 52s

========== Train Epoch 38 ==========
Loss: 1.342	Accuracy: 39.89%	Cost 50s

========== Train Epoch 39 ==========
Loss: 1.309	Accuracy: 43.09%	Cost 50s

========== Train Epoch 40 ==========
Loss: 1.312	Accuracy: 39.89%	Cost 51s

========== Train Epoch 41 ==========
Loss: 1.287	Accuracy: 41.49%	Cost 51s

========== Train Epoch 42 ==========
Loss: 1.270	Accuracy: 42.55%	Cost 50s

========== Train Epoch 43 ==========
Loss: 1.275	Accuracy: 42.55%	Cost 50s

========== Train Epoch 44 ==========
Loss: 1.261	Accuracy: 42.02%	Cost 52s

========== Train Epoch 45 ==========
Loss: 1.208	Accuracy: 44.68%	Cost 52s

========== Train Epoch 46 ==========
Loss: 1.233	Accuracy: 45.74%	Cost 50s

========== Train Epoch 47 ==========
Loss: 1.228	Accuracy: 43.62%	Cost 50s

========== Train Epoch 48 ==========
Loss: 1.213	Accuracy: 43.62%	Cost 31s

========== Train Epoch 49 ==========
Loss: 1.159	Accuracy: 45.21%	Cost 30s

========== Train Epoch 50 ==========
Loss: 1.190	Accuracy: 43.62%	Cost 29s

========== Train Epoch 51 ==========
Loss: 1.141	Accuracy: 47.87%	Cost 30s

========== Train Epoch 52 ==========
Loss: 1.151	Accuracy: 46.81%	Cost 30s

========== Train Epoch 53 ==========
Loss: 1.117	Accuracy: 45.74%	Cost 30s

========== Train Epoch 54 ==========
Loss: 1.132	Accuracy: 46.28%	Cost 31s

========== Train Epoch 55 ==========
Loss: 1.135	Accuracy: 49.47%	Cost 29s

========== Train Epoch 56 ==========
Loss: 1.122	Accuracy: 48.94%	Cost 33s

========== Train Epoch 57 ==========
Loss: 1.097	Accuracy: 47.34%	Cost 31s

========== Train Epoch 58 ==========
Loss: 1.052	Accuracy: 48.40%	Cost 30s

========== Train Epoch 59 ==========
Loss: 1.053	Accuracy: 51.60%	Cost 31s

========== Train Epoch 60 ==========
Loss: 1.040	Accuracy: 49.47%	Cost 29s

========== Train Epoch 61 ==========
Loss: 1.047	Accuracy: 48.94%	Cost 30s

========== Train Epoch 62 ==========
Loss: 1.032	Accuracy: 50.00%	Cost 30s

========== Train Epoch 63 ==========
Loss: 1.019	Accuracy: 50.53%	Cost 29s

========== Train Epoch 64 ==========
Loss: 1.038	Accuracy: 50.53%	Cost 30s

Finished training!!!

Min Loss = 1.019 in epoch 62;
    Max Accuracy = 51.60% in epoch 58;
    Total Cost 48 minutes

AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(2, 2))
  (relu1): ReLU(inplace=True)
  (pool1): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  (conv2): Conv2d(256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
  (relu2): ReLU(inplace=True)
  (pool2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  (conv3): Conv2d(256, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (relu3): ReLU(inplace=True)
  (conv4): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (relu4): ReLU(inplace=True)
  (conv5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (relu5): ReLU(inplace=True)
  (avgpool): AdaptiveAvgPool2d(output_size=(3, 3))
  (classifier_): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=2304, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=7, bias=True)
  )
  (__classifier__): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=4608, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=7, bias=True)
  )
  (spp1): SPP()
)

[0.324468085106383, 0.324468085106383, 0.324468085106383, 0.324468085106383, 0.324468085106383, 0.324468085106383, 0.324468085106383, 0.324468085106383, 0.324468085106383, 0.324468085106383, 0.30319148936170215, 0.30851063829787234, 0.35638297872340424, 0.3723404255319149, 0.3776595744680851, 0.3617021276595745, 0.3882978723404255, 0.3882978723404255, 0.39893617021276595, 0.3776595744680851, 0.39361702127659576, 0.40425531914893614, 0.40425531914893614, 0.39361702127659576, 0.3776595744680851, 0.3776595744680851, 0.3882978723404255, 0.39893617021276595, 0.40425531914893614, 0.40425531914893614, 0.40425531914893614, 0.3882978723404255, 0.4095744680851064, 0.39893617021276595, 0.3776595744680851, 0.40425531914893614, 0.40425531914893614, 0.39893617021276595, 0.4308510638297872, 0.39893617021276595, 0.4148936170212766, 0.425531914893617, 0.425531914893617, 0.42021276595744683, 0.44680851063829785, 0.4574468085106383, 0.43617021276595747, 0.43617021276595747, 0.4521276595744681, 0.43617021276595747, 0.4787234042553192, 0.46808510638297873, 0.4574468085106383, 0.4627659574468085, 0.4946808510638298, 0.48936170212765956, 0.4734042553191489, 0.48404255319148937, 0.5159574468085106, 0.4946808510638298, 0.48936170212765956, 0.5, 0.5053191489361702, 0.5053191489361702]
