dataset_path: /home/djy/dataset/dataset
pretrained : False 
parallel: True

parallel segmentent dataset : /home/djy/dataset/ycrcb_hsv_dataset
msg: ca_cbam_resnet18 replace channel use ca
using model: ResNet, resnet18
using device cuda:0
batch_size = 20
epochs = 64
loss_function = CrossEntropyLoss()
optimizer = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0
)


========== Train Epoch 1 ==========
Loss: 1.840	Accuracy: 32.45%	Cost 30s

========== Train Epoch 2 ==========
Loss: 1.684	Accuracy: 32.45%	Cost 31s

========== Train Epoch 3 ==========
Loss: 1.592	Accuracy: 33.51%	Cost 31s

========== Train Epoch 4 ==========
Loss: 1.496	Accuracy: 37.23%	Cost 31s

========== Train Epoch 5 ==========
Loss: 1.398	Accuracy: 23.94%	Cost 32s

========== Train Epoch 6 ==========
Loss: 1.329	Accuracy: 37.77%	Cost 31s

========== Train Epoch 7 ==========
Loss: 1.233	Accuracy: 33.51%	Cost 31s

========== Train Epoch 8 ==========
Loss: 1.154	Accuracy: 37.23%	Cost 30s

========== Train Epoch 9 ==========
Loss: 1.045	Accuracy: 38.30%	Cost 31s

========== Train Epoch 10 ==========
Loss: 0.952	Accuracy: 35.11%	Cost 32s

========== Train Epoch 11 ==========
Loss: 0.846	Accuracy: 29.79%	Cost 32s

========== Train Epoch 12 ==========
Loss: 0.785	Accuracy: 44.68%	Cost 32s

========== Train Epoch 13 ==========
Loss: 0.672	Accuracy: 39.36%	Cost 32s

========== Train Epoch 14 ==========
Loss: 0.570	Accuracy: 34.57%	Cost 31s

========== Train Epoch 15 ==========
Loss: 0.480	Accuracy: 43.62%	Cost 32s

========== Train Epoch 16 ==========
Loss: 0.388	Accuracy: 39.89%	Cost 32s

========== Train Epoch 17 ==========
Loss: 0.307	Accuracy: 33.51%	Cost 30s

========== Train Epoch 18 ==========
Loss: 0.261	Accuracy: 37.23%	Cost 31s

========== Train Epoch 19 ==========
Loss: 0.186	Accuracy: 36.17%	Cost 31s

========== Train Epoch 20 ==========
Loss: 0.148	Accuracy: 45.74%	Cost 31s

========== Train Epoch 21 ==========
Loss: 0.126	Accuracy: 34.57%	Cost 31s

========== Train Epoch 22 ==========
Loss: 0.106	Accuracy: 43.09%	Cost 31s

========== Train Epoch 23 ==========
Loss: 0.097	Accuracy: 39.36%	Cost 31s

========== Train Epoch 24 ==========
Loss: 0.111	Accuracy: 38.83%	Cost 31s

========== Train Epoch 25 ==========
Loss: 0.079	Accuracy: 40.43%	Cost 31s

========== Train Epoch 26 ==========
Loss: 0.058	Accuracy: 48.40%	Cost 30s

========== Train Epoch 27 ==========
Loss: 0.048	Accuracy: 35.11%	Cost 31s

========== Train Epoch 28 ==========
Loss: 0.036	Accuracy: 47.34%	Cost 31s

========== Train Epoch 29 ==========
Loss: 0.031	Accuracy: 42.02%	Cost 32s

========== Train Epoch 30 ==========
Loss: 0.026	Accuracy: 43.62%	Cost 30s

========== Train Epoch 31 ==========
Loss: 0.033	Accuracy: 43.09%	Cost 32s

========== Train Epoch 32 ==========
Loss: 0.035	Accuracy: 51.06%	Cost 32s

========== Train Epoch 33 ==========
Loss: 0.028	Accuracy: 42.55%	Cost 31s

========== Train Epoch 34 ==========
Loss: 0.022	Accuracy: 39.36%	Cost 31s

========== Train Epoch 35 ==========
Loss: 0.021	Accuracy: 39.89%	Cost 30s

========== Train Epoch 36 ==========
Loss: 0.023	Accuracy: 48.94%	Cost 32s

========== Train Epoch 37 ==========
Loss: 0.023	Accuracy: 32.45%	Cost 32s

========== Train Epoch 38 ==========
Loss: 0.017	Accuracy: 37.23%	Cost 31s

========== Train Epoch 39 ==========
Loss: 0.016	Accuracy: 43.62%	Cost 32s

========== Train Epoch 40 ==========
Loss: 0.011	Accuracy: 39.89%	Cost 33s

========== Train Epoch 41 ==========
Loss: 0.014	Accuracy: 34.57%	Cost 31s

========== Train Epoch 42 ==========
Loss: 0.011	Accuracy: 38.83%	Cost 32s

========== Train Epoch 43 ==========
Loss: 0.011	Accuracy: 42.55%	Cost 31s

========== Train Epoch 44 ==========
Loss: 0.011	Accuracy: 36.70%	Cost 30s

========== Train Epoch 45 ==========
Loss: 0.009	Accuracy: 39.89%	Cost 32s

========== Train Epoch 46 ==========
Loss: 0.008	Accuracy: 32.98%	Cost 32s

========== Train Epoch 47 ==========
Loss: 0.009	Accuracy: 34.57%	Cost 30s

========== Train Epoch 48 ==========
Loss: 0.010	Accuracy: 42.02%	Cost 31s

========== Train Epoch 49 ==========
Loss: 0.006	Accuracy: 43.62%	Cost 33s

========== Train Epoch 50 ==========
Loss: 0.006	Accuracy: 39.36%	Cost 32s

========== Train Epoch 51 ==========
Loss: 0.010	Accuracy: 44.15%	Cost 32s

========== Train Epoch 52 ==========
Loss: 0.015	Accuracy: 34.04%	Cost 31s

========== Train Epoch 53 ==========
Loss: 0.018	Accuracy: 39.36%	Cost 32s

========== Train Epoch 54 ==========
Loss: 0.080	Accuracy: 42.02%	Cost 32s

========== Train Epoch 55 ==========
Loss: 0.105	Accuracy: 40.43%	Cost 31s

========== Train Epoch 56 ==========
Loss: 0.052	Accuracy: 50.53%	Cost 31s

========== Train Epoch 57 ==========
Loss: 0.038	Accuracy: 39.89%	Cost 31s

========== Train Epoch 58 ==========
Loss: 0.034	Accuracy: 41.49%	Cost 32s

========== Train Epoch 59 ==========
Loss: 0.022	Accuracy: 44.68%	Cost 32s

========== Train Epoch 60 ==========
Loss: 0.011	Accuracy: 44.15%	Cost 31s

========== Train Epoch 61 ==========
Loss: 0.006	Accuracy: 43.62%	Cost 31s

========== Train Epoch 62 ==========
Loss: 0.006	Accuracy: 45.74%	Cost 31s

========== Train Epoch 63 ==========
Loss: 0.006	Accuracy: 39.36%	Cost 30s

========== Train Epoch 64 ==========
Loss: 0.004	Accuracy: 40.43%	Cost 32s

Finished training!!!

Min Loss = 0.004 in epoch 63;
    Max Accuracy = 51.06% in epoch 31;
    Total Cost 33 minutes

ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=64, out_features=4, bias=True)
            (2): ReLU()
            (3): Linear(in_features=4, out_features=64, bias=True)
          )
        )
        (ChannelGate1): CoordAtt(
          (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
          (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (bn1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (conv_h): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv_w): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=64, out_features=4, bias=True)
            (2): ReLU()
            (3): Linear(in_features=4, out_features=64, bias=True)
          )
        )
        (ChannelGate1): CoordAtt(
          (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
          (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (bn1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (conv_h): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv_w): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=128, out_features=8, bias=True)
            (2): ReLU()
            (3): Linear(in_features=8, out_features=128, bias=True)
          )
        )
        (ChannelGate1): CoordAtt(
          (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
          (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
          (conv1): Conv2d(128, 8, kernel_size=(1, 1), stride=(1, 1))
          (bn1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (conv_h): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv_w): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=128, out_features=8, bias=True)
            (2): ReLU()
            (3): Linear(in_features=8, out_features=128, bias=True)
          )
        )
        (ChannelGate1): CoordAtt(
          (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
          (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
          (conv1): Conv2d(128, 8, kernel_size=(1, 1), stride=(1, 1))
          (bn1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (conv_h): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv_w): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=256, out_features=16, bias=True)
            (2): ReLU()
            (3): Linear(in_features=16, out_features=256, bias=True)
          )
        )
        (ChannelGate1): CoordAtt(
          (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
          (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
          (conv1): Conv2d(256, 8, kernel_size=(1, 1), stride=(1, 1))
          (bn1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (conv_h): Conv2d(8, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv_w): Conv2d(8, 256, kernel_size=(1, 1), stride=(1, 1))
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=256, out_features=16, bias=True)
            (2): ReLU()
            (3): Linear(in_features=16, out_features=256, bias=True)
          )
        )
        (ChannelGate1): CoordAtt(
          (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
          (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
          (conv1): Conv2d(256, 8, kernel_size=(1, 1), stride=(1, 1))
          (bn1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (conv_h): Conv2d(8, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv_w): Conv2d(8, 256, kernel_size=(1, 1), stride=(1, 1))
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=512, out_features=32, bias=True)
            (2): ReLU()
            (3): Linear(in_features=32, out_features=512, bias=True)
          )
        )
        (ChannelGate1): CoordAtt(
          (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
          (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
          (conv1): Conv2d(512, 16, kernel_size=(1, 1), stride=(1, 1))
          (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (conv_h): Conv2d(16, 512, kernel_size=(1, 1), stride=(1, 1))
          (conv_w): Conv2d(16, 512, kernel_size=(1, 1), stride=(1, 1))
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=512, out_features=32, bias=True)
            (2): ReLU()
            (3): Linear(in_features=32, out_features=512, bias=True)
          )
        )
        (ChannelGate1): CoordAtt(
          (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
          (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
          (conv1): Conv2d(512, 16, kernel_size=(1, 1), stride=(1, 1))
          (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (conv_h): Conv2d(16, 512, kernel_size=(1, 1), stride=(1, 1))
          (conv_w): Conv2d(16, 512, kernel_size=(1, 1), stride=(1, 1))
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc_): Linear(in_features=512, out_features=7, bias=True)
  (__fc__): Linear(in_features=1024, out_features=7, bias=True)
)

[0.324468085106383, 0.324468085106383, 0.3351063829787234, 0.3723404255319149, 0.2393617021276596, 0.3776595744680851, 0.3351063829787234, 0.3723404255319149, 0.3829787234042553, 0.35106382978723405, 0.2978723404255319, 0.44680851063829785, 0.39361702127659576, 0.34574468085106386, 0.43617021276595747, 0.39893617021276595, 0.3351063829787234, 0.3723404255319149, 0.3617021276595745, 0.4574468085106383, 0.34574468085106386, 0.4308510638297872, 0.39361702127659576, 0.3882978723404255, 0.40425531914893614, 0.48404255319148937, 0.35106382978723405, 0.4734042553191489, 0.42021276595744683, 0.43617021276595747, 0.4308510638297872, 0.5106382978723404, 0.425531914893617, 0.39361702127659576, 0.39893617021276595, 0.48936170212765956, 0.324468085106383, 0.3723404255319149, 0.43617021276595747, 0.39893617021276595, 0.34574468085106386, 0.3882978723404255, 0.425531914893617, 0.3670212765957447, 0.39893617021276595, 0.32978723404255317, 0.34574468085106386, 0.42021276595744683, 0.43617021276595747, 0.39361702127659576, 0.44148936170212766, 0.3404255319148936, 0.39361702127659576, 0.42021276595744683, 0.40425531914893614, 0.5053191489361702, 0.39893617021276595, 0.4148936170212766, 0.44680851063829785, 0.44148936170212766, 0.43617021276595747, 0.4574468085106383, 0.39361702127659576, 0.40425531914893614]
Traceback (most recent call last):
  File "train.py", line 247, in <module>
    Plot('', 'b', acc_list)
TypeError: plot() got an unexpected keyword argument 'args'
