dataset_path: /home/djy/dataset/dataset1
pretrained : False 
parallel: False

msg: cbam_resnet
using model: ResNet, resnet18
using device cuda:0
batch_size = 20
epochs = 64
loss_function = CrossEntropyLoss()
optimizer = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0
)


========== Train Epoch 1 ==========
Loss: 1.697	Accuracy: 39.29%	Cost 41s

========== Train Epoch 2 ==========
Loss: 1.459	Accuracy: 48.57%	Cost 44s

========== Train Epoch 3 ==========
Loss: 1.299	Accuracy: 57.50%	Cost 47s

========== Train Epoch 4 ==========
Loss: 1.145	Accuracy: 56.79%	Cost 44s

========== Train Epoch 5 ==========
Loss: 0.985	Accuracy: 60.71%	Cost 44s

========== Train Epoch 6 ==========
Loss: 0.845	Accuracy: 64.29%	Cost 44s

========== Train Epoch 7 ==========
Loss: 0.660	Accuracy: 65.71%	Cost 43s

========== Train Epoch 8 ==========
Loss: 0.544	Accuracy: 60.71%	Cost 44s

========== Train Epoch 9 ==========
Loss: 0.373	Accuracy: 59.29%	Cost 45s

========== Train Epoch 10 ==========
Loss: 0.255	Accuracy: 71.07%	Cost 44s

========== Train Epoch 11 ==========
Loss: 0.206	Accuracy: 69.64%	Cost 45s

========== Train Epoch 12 ==========
Loss: 0.164	Accuracy: 68.21%	Cost 44s

========== Train Epoch 13 ==========
Loss: 0.091	Accuracy: 71.79%	Cost 43s

========== Train Epoch 14 ==========
Loss: 0.082	Accuracy: 72.50%	Cost 44s

========== Train Epoch 15 ==========
Loss: 0.066	Accuracy: 76.07%	Cost 43s

========== Train Epoch 16 ==========
Loss: 0.062	Accuracy: 77.50%	Cost 45s

========== Train Epoch 17 ==========
Loss: 0.042	Accuracy: 76.43%	Cost 44s

========== Train Epoch 18 ==========
Loss: 0.034	Accuracy: 75.00%	Cost 45s

========== Train Epoch 19 ==========
Loss: 0.029	Accuracy: 77.14%	Cost 45s

========== Train Epoch 20 ==========
Loss: 0.040	Accuracy: 72.50%	Cost 46s

========== Train Epoch 21 ==========
Loss: 0.044	Accuracy: 71.79%	Cost 46s

========== Train Epoch 22 ==========
Loss: 0.039	Accuracy: 72.86%	Cost 44s

========== Train Epoch 23 ==========
Loss: 0.037	Accuracy: 70.00%	Cost 44s

========== Train Epoch 24 ==========
Loss: 0.031	Accuracy: 76.43%	Cost 46s

========== Train Epoch 25 ==========
Loss: 0.028	Accuracy: 69.64%	Cost 44s

========== Train Epoch 26 ==========
Loss: 0.079	Accuracy: 44.64%	Cost 44s

========== Train Epoch 27 ==========
Loss: 0.123	Accuracy: 59.64%	Cost 44s

========== Train Epoch 28 ==========
Loss: 0.132	Accuracy: 54.64%	Cost 44s

========== Train Epoch 29 ==========
Loss: 0.068	Accuracy: 72.14%	Cost 44s

========== Train Epoch 30 ==========
Loss: 0.044	Accuracy: 72.50%	Cost 45s

========== Train Epoch 31 ==========
Loss: 0.030	Accuracy: 74.29%	Cost 44s

========== Train Epoch 32 ==========
Loss: 0.024	Accuracy: 73.93%	Cost 44s

========== Train Epoch 33 ==========
Loss: 0.021	Accuracy: 74.29%	Cost 45s

========== Train Epoch 34 ==========
Loss: 0.020	Accuracy: 75.00%	Cost 44s

========== Train Epoch 35 ==========
Loss: 0.020	Accuracy: 73.93%	Cost 44s

========== Train Epoch 36 ==========
Loss: 0.015	Accuracy: 76.79%	Cost 44s

========== Train Epoch 37 ==========
Loss: 0.015	Accuracy: 77.86%	Cost 45s

========== Train Epoch 38 ==========
Loss: 0.016	Accuracy: 76.43%	Cost 43s

========== Train Epoch 39 ==========
Loss: 0.017	Accuracy: 75.00%	Cost 43s

========== Train Epoch 40 ==========
Loss: 0.020	Accuracy: 75.36%	Cost 46s

========== Train Epoch 41 ==========
Loss: 0.015	Accuracy: 76.43%	Cost 44s

========== Train Epoch 42 ==========
Loss: 0.014	Accuracy: 75.71%	Cost 44s

========== Train Epoch 43 ==========
Loss: 0.012	Accuracy: 77.14%	Cost 45s

========== Train Epoch 44 ==========
Loss: 0.014	Accuracy: 77.86%	Cost 46s

========== Train Epoch 45 ==========
Loss: 0.012	Accuracy: 76.07%	Cost 43s

========== Train Epoch 46 ==========
Loss: 0.012	Accuracy: 74.64%	Cost 45s

========== Train Epoch 47 ==========
Loss: 0.015	Accuracy: 77.86%	Cost 43s

========== Train Epoch 48 ==========
Loss: 0.012	Accuracy: 74.64%	Cost 46s

========== Train Epoch 49 ==========
Loss: 0.012	Accuracy: 75.71%	Cost 46s

========== Train Epoch 50 ==========
Loss: 0.013	Accuracy: 75.36%	Cost 44s

========== Train Epoch 51 ==========
Loss: 0.012	Accuracy: 75.71%	Cost 44s

========== Train Epoch 52 ==========
Loss: 0.012	Accuracy: 74.64%	Cost 44s

========== Train Epoch 53 ==========
Loss: 0.011	Accuracy: 76.07%	Cost 45s

========== Train Epoch 54 ==========
Loss: 0.009	Accuracy: 76.07%	Cost 46s

========== Train Epoch 55 ==========
Loss: 0.009	Accuracy: 77.14%	Cost 43s

========== Train Epoch 56 ==========
Loss: 0.010	Accuracy: 76.79%	Cost 46s

========== Train Epoch 57 ==========
Loss: 0.010	Accuracy: 76.43%	Cost 44s

========== Train Epoch 58 ==========
Loss: 0.011	Accuracy: 73.93%	Cost 44s

========== Train Epoch 59 ==========
Loss: 0.010	Accuracy: 74.29%	Cost 44s

========== Train Epoch 60 ==========
Loss: 0.009	Accuracy: 75.00%	Cost 44s

========== Train Epoch 61 ==========
Loss: 0.008	Accuracy: 77.14%	Cost 45s

========== Train Epoch 62 ==========
Loss: 0.011	Accuracy: 75.36%	Cost 46s

========== Train Epoch 63 ==========
Loss: 0.010	Accuracy: 76.43%	Cost 43s

========== Train Epoch 64 ==========
Loss: 0.010	Accuracy: 75.71%	Cost 44s

Finished training!!!

Min Loss = 0.008 in epoch 60;
    Max Accuracy = 77.86% in epoch 36;
    Total Cost 47 minutes

ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=64, out_features=4, bias=True)
            (2): ReLU()
            (3): Linear(in_features=4, out_features=64, bias=True)
          )
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=64, out_features=4, bias=True)
            (2): ReLU()
            (3): Linear(in_features=4, out_features=64, bias=True)
          )
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=128, out_features=8, bias=True)
            (2): ReLU()
            (3): Linear(in_features=8, out_features=128, bias=True)
          )
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=128, out_features=8, bias=True)
            (2): ReLU()
            (3): Linear(in_features=8, out_features=128, bias=True)
          )
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=256, out_features=16, bias=True)
            (2): ReLU()
            (3): Linear(in_features=16, out_features=256, bias=True)
          )
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=256, out_features=16, bias=True)
            (2): ReLU()
            (3): Linear(in_features=16, out_features=256, bias=True)
          )
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=512, out_features=32, bias=True)
            (2): ReLU()
            (3): Linear(in_features=32, out_features=512, bias=True)
          )
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (cbam): CBAM(
        (ChannelGate): ChannelGate(
          (mlp): Sequential(
            (0): Flatten()
            (1): Linear(in_features=512, out_features=32, bias=True)
            (2): ReLU()
            (3): Linear(in_features=32, out_features=512, bias=True)
          )
        )
        (SpatialGate): SpatialGate(
          (compress): ChannelPool()
          (spatial): BasicConv(
            (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
            (bn): BatchNorm2d(1, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc_): Linear(in_features=512, out_features=7, bias=True)
  (__fc__): Linear(in_features=1024, out_features=7, bias=True)
)

[0.39285714285714285, 0.4857142857142857, 0.575, 0.5678571428571428, 0.6071428571428571, 0.6428571428571429, 0.6571428571428571, 0.6071428571428571, 0.5928571428571429, 0.7107142857142857, 0.6964285714285714, 0.6821428571428572, 0.7178571428571429, 0.725, 0.7607142857142857, 0.775, 0.7642857142857142, 0.75, 0.7714285714285715, 0.725, 0.7178571428571429, 0.7285714285714285, 0.7, 0.7642857142857142, 0.6964285714285714, 0.44642857142857145, 0.5964285714285714, 0.5464285714285714, 0.7214285714285714, 0.725, 0.7428571428571429, 0.7392857142857143, 0.7428571428571429, 0.75, 0.7392857142857143, 0.7678571428571429, 0.7785714285714286, 0.7642857142857142, 0.75, 0.7535714285714286, 0.7642857142857142, 0.7571428571428571, 0.7714285714285715, 0.7785714285714286, 0.7607142857142857, 0.7464285714285714, 0.7785714285714286, 0.7464285714285714, 0.7571428571428571, 0.7535714285714286, 0.7571428571428571, 0.7464285714285714, 0.7607142857142857, 0.7607142857142857, 0.7714285714285715, 0.7678571428571429, 0.7642857142857142, 0.7392857142857143, 0.7428571428571429, 0.75, 0.7714285714285715, 0.7535714285714286, 0.7642857142857142, 0.7571428571428571]
Traceback (most recent call last):
  File "train.py", line 248, in <module>
    Plot('', 'b', acc_list)
TypeError: plot() got an unexpected keyword argument 'args'
